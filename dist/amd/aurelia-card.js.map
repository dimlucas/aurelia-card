{"version":3,"sources":["aurelia-card.ts"],"names":[],"mappings":"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","file":"aurelia-card.js","sourcesContent":["import { bindable } from 'aurelia-framework';\nimport * as $ from 'jquery';\nimport 'jquery-ui';\n\nexport class AureliaCardCustomElement {\n\n    @bindable transparent: boolean = false;\n\n    //The card's resizability defaults to false\n    @bindable resizable: boolean = false;\n\n    //If set to true the card's contents will be collapsible\n    @bindable collapsible: boolean = false;\n\n    //The handles that can be used for resizing. \n    //Predefined values: [all, horizontal, h, vertical, v]\n    //Comma separated values. Accepted values: n,e,s,w,ne,se,nw,sw\n    @bindable handles: string = \"s\";\n    private allHandles: string = \"n,s,w,e,ne,se,nw,sw\";\n    private hHandles: string = \"e,w\";\n    private vHandles: string = \"n,s\";\n    private handleClassPrefix: string = \"ui-resizable-handle ui-resizable-\";\n    private northHandleClass: string = this.handleClassPrefix + \"n\";\n    private eastHandleClass: string = this.handleClassPrefix + \"e\";\n    private westHandleClass: string = this.handleClassPrefix + \"w\";\n    private southHandleClass: string = this.handleClassPrefix + \"s\";\n    private northEastHandleClass: string = this.handleClassPrefix + \"ne\";\n    private southEastHandleClass: string = this.handleClassPrefix + \"se\";\n    private northWestHandleClass: string = this.handleClassPrefix + \"nw\";\n    private southWestHandleClass: string = this.handleClassPrefix + \"sw\";\n\n    //If set to true, the card's original aspect ratio will be maintained\n    @bindable aspectRatio: boolean = false;\n    card: any;\n    collapseBtn: any;\n\n    aspectRatioChanged(newValue, oldValue) {\n        console.log(\"Aspect Ratio changed form \" + oldValue + \" to \" + newValue);\n    }\n\n    handlesChanged(newValue, oldValue) {\n        if (newValue != oldValue) {\n            if (newValue == 'all') {\n                this.handles = this.allHandles\n            }\n            else if ((newValue == 'horizontal') || (newValue == 'h')) {\n                this.handles = this.hHandles;\n            }\n            else if ((newValue == 'vertical') || (newValue == 'v')) {\n                this.handles = this.vHandles;\n            }\n        }\n    }\n\n    attached() {\n        if (this.resizable) {\n            $(this.card).resizable({\n                handles: this.handles\n            });\n            let eastHandle = document.getElementsByClassName(this.eastHandleClass)[0];\n            let westHandle = document.getElementsByClassName(this.westHandleClass)[0];\n            let northHandle = document.getElementsByClassName(this.northHandleClass)[0];\n            let southHandle = document.getElementsByClassName(this.southHandleClass)[0];\n            let neHandle = document.getElementsByClassName(this.northEastHandleClass)[0];\n            let seHandle = document.getElementsByClassName(this.southEastHandleClass)[0];\n            let nwHandle = document.getElementsByClassName(this.northWestHandleClass)[0];\n            let swHandle = document.getElementsByClassName(this.southWestHandleClass)[0];\n            if(eastHandle){\n                //Add icons to the handles here\n            }\n            if(westHandle){\n                console.log(westHandle);\n            }\n            if(northHandle){\n                console.log(northHandle);\n            }\n            if(southHandle){\n                console.log(southHandle);\n            }\n            if(neHandle){\n                console.log(neHandle);\n            }\n            if(nwHandle){\n                console.log(nwHandle);\n            }\n            if(seHandle){\n                console.log(seHandle);\n            }\n            if(swHandle){\n                console.log(swHandle);\n            }\n        }\n\n        //Called to solve a bug caused when the first call to .collapse() does nothing\n        if(this.collapsible){\n            $(this.card).collapse('show');\n        }\n    }\n\n    //Collapses the card's contents when the collapse button is clicked\n    collapse(): void{\n        if(this.collapsible){\n            $(this.card).collapse('toggle');\n            $(this.collapseBtn).toggleClass('rotate-up');\n        }\n    }\n}\n\n"]}